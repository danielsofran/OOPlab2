        -:    0:Source:C:/Desktop/OOP/lab2/repository.c
        -:    0:Graph:C:\Desktop\OOP\lab2\cmake-build-debug-coverage\CMakeFiles\lab2.dir\repository.c.gcno
        -:    0:Data:C:\Desktop\OOP\lab2\cmake-build-debug-coverage\CMakeFiles\lab2.dir\repository.c.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Daniel on 05.03.2022.
        -:    3://
        -:    4:
        -:    5:#include "repository.h"
        -:    6:
function repository_create called 2 returned 100% blocks executed 100%
        2:    7:Repository repository_create(){ // creez un repository vid de capacitate LENGTHMAX
        -:    8:    Repository repository;
        2:    9:    repository.capacity = LENGTHMAX;
        2:   10:    repository.length = 0;
        -:   11:    //repository.medicamente = ALLOC(Medicament, LENGTHMAX);
        2:   12:    return repository;
        2:   12-block  0
        -:   13:}
        -:   14:
function repository_get_length called 3 returned 100% blocks executed 100%
        3:   15:int repository_get_length(Repository repository){
        -:   16:    // returneaza numarul de elemente dintr-un repo transmis ca parametru
        3:   17:    return repository.length;
        3:   17-block  0
        -:   18:}
function repository_get_capacity called 1 returned 100% blocks executed 100%
        1:   19:int repository_get_capacity(Repository repository) {
        -:   20:    // returneaza capaitatea unui repo
        1:   21:    return repository.capacity;
        1:   21-block  0
        -:   22:}
function repository_get_element_at called 4 returned 100% blocks executed 100%
        4:   23:Medicament repository_get_element_at(Repository repository, int index) {
        -:   24:    // returneaza elementul de tip Medicament de la pozitia index
        -:   25:    // seteaza eroarea OUT_OF_RANGE daca index >= length sau index < 0
        4:   26:    if(index>=0 && index<repository.length)
        4:   26-block  0
branch  0 taken 4 (fallthrough)
branch  1 taken 0
        4:   26-block  1
branch  2 taken 3 (fallthrough)
branch  3 taken 1
        3:   27:        return repository.medicamente[index];
        3:   27-block  0
        1:   28:    SET_ERROR(OUT_OF_RANGE);
        1:   28-block  0
call    0 returned 1
        1:   29:    Medicament error={};
        1:   30:    return error;
        -:   31:}
        -:   32:
function repository_set_length called 3 returned 100% blocks executed 100%
        3:   33:void repository_set_length(Repository* repository, int length) {
        -:   34:    /**
        -:   35:     * repository: pointer catre un repo
        -:   36:     * length: lungimea noua
        -:   37:     * seteaza lungimea repo ului la length
        -:   38:     */
        3:   39:    if(length<=repository->capacity) repository->length = length;
        3:   39-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 1
        2:   39-block  1
        1:   40:    else SET_ERROR(INSUFFICIENT_CAPACITY);
        1:   40-block  0
call    0 returned 1
        3:   41:}
function repository_set_element_at called 2 returned 100% blocks executed 100%
        2:   42:void repository_set_element_at(Repository* repository, int index, Medicament medicament) {
        -:   43:    /**
        -:   44:     * repository: pointer catre un repo
        -:   45:     * index: index-ul care va fi modificat repo
        -:   46:     * medicament: o instanta a structurii Medicament
        -:   47:     * seteaza eroarea OUT_OF_RANGE in cazul in care index >= length sau index < 0
        -:   48:     */
        2:   49:    if(index<repository->length && index >=0)
        2:   49-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   49-block  1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   50:        repository->medicamente[index] = medicament;
        1:   50-block  0
        1:   51:    else SET_ERROR(OUT_OF_RANGE);
        1:   51-block  0
call    0 returned 1
        2:   52:}
        -:   53:
function repository_add called 2 returned 100% blocks executed 100%
        2:   54:void repository_add(Repository* repository, Medicament medicament){
        -:   55:    /**
        -:   56:     * repository: pointer catre un repo
        -:   57:     * medicament: o instanta a structurii Medicament
        -:   58:     * adauga medicamentul la sfarsitul repo-ului
        -:   59:     * seteaza eroarea CONTAINER_FULL in cazul in care in container nu mai pot fi adaugate elemente
        -:   60:     */
        2:   61:    if(repository->length >= repository->capacity) {
        2:   61-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   62:        SET_ERROR(OUT_OF_RANGE);
        1:   62-block  0
call    0 returned 1
        1:   63:        return;
        -:   64:        //repository_realloc(repository);
        -:   65:    }
        1:   66:    repository->medicamente[repository->length++] = medicament;
        1:   66-block  0
        -:   67:}
